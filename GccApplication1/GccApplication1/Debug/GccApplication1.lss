
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000182  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000248  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ce4  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ba2  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ee  00000000  00000000  00001b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001efc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000536  00000000  00000000  00001f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00002456  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	41 d0       	rcall	.+130    	; 0x178 <main>
  f6:	43 c0       	rjmp	.+134    	; 0x17e <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <TXoPin>:

.global TXoPin 

	TXoPin:	

		mov r25,r24 
  fa:	98 2f       	mov	r25, r24
		out	DDRB,0x8
  fc:	84 bc       	out	0x24, r8	; 36
		out PORTB,0x8
  fe:	85 bc       	out	0x25, r8	; 37
		;************************************
		out PORTB,0x0
 100:	05 bc       	out	0x25, r0	; 37
		call delay
 102:	2e d0       	rcall	.+92     	; 0x160 <delay>
		;***********************************
		ldi r20,0x8
		call left_move
 104:	48 e0       	ldi	r20, 0x08	; 8
 106:	33 d0       	rcall	.+102    	; 0x16e <left>
		out PORTB,r24 
		mov r24,r25
 108:	85 bd       	out	0x25, r24	; 37
		call delay
 10a:	89 2f       	mov	r24, r25
		;************************
		ldi r20,0x7
 10c:	29 d0       	rcall	.+82     	; 0x160 <delay>
		call left_move
 10e:	47 e0       	ldi	r20, 0x07	; 7
		out PORTB,r24 
		mov r24,r25
 110:	2e d0       	rcall	.+92     	; 0x16e <left>
		call delay
 112:	85 bd       	out	0x25, r24	; 37
		;************************
		ldi r20,0x6
 114:	89 2f       	mov	r24, r25
		call left_move
 116:	24 d0       	rcall	.+72     	; 0x160 <delay>
		out PORTB,r24 
 118:	46 e0       	ldi	r20, 0x06	; 6
		mov r24,r25
		call delay
 11a:	29 d0       	rcall	.+82     	; 0x16e <left>
		;************************
		ldi r20,0x5
 11c:	85 bd       	out	0x25, r24	; 37
		call left_move
 11e:	89 2f       	mov	r24, r25
		out PORTB,r24 
 120:	1f d0       	rcall	.+62     	; 0x160 <delay>
		mov r24,r25
		call delay
 122:	45 e0       	ldi	r20, 0x05	; 5
 124:	24 d0       	rcall	.+72     	; 0x16e <left>
		;************************
		ldi r20,0x4
		call left_move
 126:	85 bd       	out	0x25, r24	; 37
		out PORTB,r24 
 128:	89 2f       	mov	r24, r25
		mov r24,r25
 12a:	1a d0       	rcall	.+52     	; 0x160 <delay>
		call delay
 12c:	44 e0       	ldi	r20, 0x04	; 4
		;************************
		ldi r20,0x3
		call left_move
 12e:	1f d0       	rcall	.+62     	; 0x16e <left>
 130:	85 bd       	out	0x25, r24	; 37
		out PORTB,r24 
		mov r24,r25
 132:	89 2f       	mov	r24, r25
		call delay
 134:	15 d0       	rcall	.+42     	; 0x160 <delay>
		;************************
		ldi r20,0x2
 136:	43 e0       	ldi	r20, 0x03	; 3
		call left_move
 138:	1a d0       	rcall	.+52     	; 0x16e <left>
 13a:	85 bd       	out	0x25, r24	; 37
		out PORTB,r24 
 13c:	89 2f       	mov	r24, r25
		mov r24,r25
 13e:	10 d0       	rcall	.+32     	; 0x160 <delay>
		call delay
 140:	42 e0       	ldi	r20, 0x02	; 2
 142:	15 d0       	rcall	.+42     	; 0x16e <left>
		;************************
		ldi r20,0x1
 144:	85 bd       	out	0x25, r24	; 37
		call left_move
 146:	89 2f       	mov	r24, r25
 148:	0b d0       	rcall	.+22     	; 0x160 <delay>
		out PORTB,r24 
 14a:	41 e0       	ldi	r20, 0x01	; 1
		mov r24,r25
 14c:	10 d0       	rcall	.+32     	; 0x16e <left>
		call delay
 14e:	85 bd       	out	0x25, r24	; 37
 150:	89 2f       	mov	r24, r25
		;************************
		andi r24,0x8
 152:	06 d0       	rcall	.+12     	; 0x160 <delay>
		out PORTB,r24 
 154:	88 70       	andi	r24, 0x08	; 8
		call delay
 156:	85 bd       	out	0x25, r24	; 37
 158:	03 d0       	rcall	.+6      	; 0x160 <delay>
		;**************************
		ldi r24,0x8
 15a:	88 e0       	ldi	r24, 0x08	; 8
		out PORTB,r24
 15c:	85 bd       	out	0x25, r24	; 37
		;**************************
		ret				;
 15e:	08 95       	ret

00000160 <delay>:

delay:
	ldi  r18, 3
 160:	23 e0       	ldi	r18, 0x03	; 3
    ldi  r19, 40
 162:	38 e2       	ldi	r19, 0x28	; 40

00000164 <L1>:
L1: dec  r19
 164:	3a 95       	dec	r19
    brne L1
 166:	f1 f7       	brne	.-4      	; 0x164 <L1>
    dec  r18
 168:	2a 95       	dec	r18
    brne L1
 16a:	e1 f7       	brne	.-8      	; 0x164 <L1>
    ret
 16c:	08 95       	ret

0000016e <left>:
 
left_move:
left:
	lsl r24
 16e:	88 0f       	add	r24, r24
	dec r20
 170:	4a 95       	dec	r20
	brne left
 172:	e9 f7       	brne	.-6      	; 0x16e <left>
	andi r24,0x8
 174:	88 70       	andi	r24, 0x08	; 8
 176:	08 95       	ret

00000178 <main>:
int main(void)
{
    /* Replace with your application code */
    while (1) 
    {
		TXoPin('1');
 178:	81 e3       	ldi	r24, 0x31	; 49
 17a:	bf df       	rcall	.-130    	; 0xfa <TXoPin>
 17c:	fd cf       	rjmp	.-6      	; 0x178 <main>

0000017e <_exit>:
 17e:	f8 94       	cli

00000180 <__stop_program>:
 180:	ff cf       	rjmp	.-2      	; 0x180 <__stop_program>
